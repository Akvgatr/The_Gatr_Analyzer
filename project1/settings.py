"""
Django settings for project1 project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url  # Ensure you have installed this package

BASE_DIR = Path(__file__).resolve().parent.parent



SECRET_KEY = 'django-insecure-%pywo%*s2zc^7zi$lw@yr01e!qc_zf!a+^0p=hx_^+k4s(%%6z'

DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = ['127.0.0.1', 'the-gatr-analyzer.onrender.com']


# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'services',
    'tinymce',
    'news',
    'dbenter',
    'project1',  # Your app must be here

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR,"templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'project1.wsgi.application'



LOGIN_URL = "/login/"

LOGIN_REDIRECT_URL = '/'  # Redirect after successful login



# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'django_data_analysis',
#         'USER': 'rootuser',
#         'PASSWORD': 'Gangayamuna@123',
#         'HOST': '127.0.0.1',  # or 'localhost'
# #        'HOST': 'localhost',
#         'PORT': '3307',  # Make sure this matches your MariaDB port
#         'OPTIONS': {
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         },
#     }
# }




DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bzj0q4hvrkhixozxayxl',  # Matches MYSQL_ADDON_DB
        'USER': 'ufcwfewaajjk4arb',      # Matches MYSQL_ADDON_USER
        'PASSWORD': 'fET5IwXoQvb4NwWHGiuB',  # Matches MYSQL_ADDON_PASSWORD
        'HOST': 'bzj0q4hvrkhixozxayxl-mysql.services.clever-cloud.com',  # Matches MYSQL_ADDON_HOST
        'PORT': '3306',  # Matches MYSQL_ADDON_PORT
    }
}






# DATABASES = {
#     'default': dj_database_url.parse(os.getenv('DATABASE_URL', ''), conn_max_age=600)
# }

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


